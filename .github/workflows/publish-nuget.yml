name: Publish NuGet Package

on:
  release:
    types:
      - created

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.404
          8.0.x

    - name: Extract and process release version
      run: |
        RELEASE_VERSION="${GITHUB_REF##*/}"
        CLEAN_VERSION="${RELEASE_VERSION#v}" # Remove the "v" prefix if it exists
        echo "CLEAN_VERSION=$CLEAN_VERSION" >> $GITHUB_ENV

    - name: Validate version format
      run: |
        if [[ ! "$CLEAN_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
          echo "Invalid version format: $CLEAN_VERSION"
          exit 1
        fi

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release /p:ContinuousIntegrationBuild=true

    - name: Pack the NuGet package
      run: |
        dotnet pack --configuration Release --no-build \
          /p:Version=${{ env.CLEAN_VERSION }} \
          --output nuget

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: nuget-${{ env.CLEAN_VERSION }}
        path: nuget/

  publish:
    name: Publish
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-${{ env.CLEAN_VERSION }}
        path: nuget

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Publish NuGet packages to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        NUGET_SOURCE: ${{ secrets.NUGET_SOURCE || 'https://api.nuget.org/v3/index.json' }}
      run: |
        dotnet nuget push nuget/*.nupkg \
          --api-key $NUGET_API_KEY \
          --source $NUGET_SOURCE
